# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application (all services)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  unit_and_lint_backend:
    runs-on: ubuntu-latest
    strategy:
      # Still test other services if one fails
      fail-fast: false
      matrix:
        # All services to test
        service: ["server", "db", "execution_engine"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
        #cache: 'pip' # Speed up builds
        #cache-dependency-path: '${{ matrix.service }}/requirements.txt'
        
    - name: Install dependencies for ${{ matrix.service }}
      working-directory: ./${{ matrix.service }}
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint ${{ matrix.service }} with flake8
      working-directory: ./${{ matrix.service }}
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # Only lint src directory
        flake8 ./src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./src --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
        
    - name: Test ${{ matrix.service }} with pytest [unit tests]
      working-directory: ./${{ matrix.service }}/src
      run: |
        python -m pytest ../tests/unit/
