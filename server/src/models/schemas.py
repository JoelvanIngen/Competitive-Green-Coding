"""
schemas.py

Defines Pydantic models for the gateway. These mirror what the
DB microservice’s `/users/` endpoints expect and return.
"""

from pydantic import BaseModel, EmailStr, constr


class UserRegister(BaseModel):
    """
    Incoming JSON when a client (e.g. your webserver) calls POST /users/.
      - name: any non‐empty string
      - email: must be a valid email address
      - password: 8–128 chars, at least one uppercase letter and one digit
    """

    name: str
    email: EmailStr
    password: constr(
        min_length=8,
        max_length=128,
        pattern="^(?=.*[A-Z])(?=.*[0-9]).+$",
    )


class UserResponse(BaseModel):
    """
    What the gateway returns to the client, based on what the DB service returns.
      - uuid:  string (generated by DB service)
      - name:  string
      - email: EmailStr
    (We omit password_hash and is_active here, matching the DB microservice’s output.)
    """

    uuid: str
    name: str
    email: EmailStr
